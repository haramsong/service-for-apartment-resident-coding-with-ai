'use client'

import { Card } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { 
  Bell, 
  MessageSquare, 
  Car, 
  Package, 
  Calendar,
  ChevronRight,
  AlertCircle,
  CheckCircle,
  Clock
} from 'lucide-react'

export default function HomePage() {
  const quickActions = [
    {
      icon: MessageSquare,
      title: 'Ïª§ÎÆ§ÎãàÌã∞',
      description: 'ÏÉà Í∏Ä 3Í∞ú',
      color: 'bg-blue-50 text-blue-600',
      href: '/community',
      badge: '3'
    },
    {
      icon: Car,
      title: 'Ï£ºÏ∞®ÌòÑÌô©',
      description: 'Í∞ÄÎä• 12ÎåÄ',
      color: 'bg-green-50 text-green-600',
      href: '/life'
    },
    {
      icon: Package,
      title: 'ÌÉùÎ∞∞',
      description: 'ÎèÑÏ∞© 2Í∞ú',
      color: 'bg-orange-50 text-orange-600',
      href: '/life',
      badge: '2'
    },
    {
      icon: Calendar,
      title: 'ÏùºÏ†ï',
      description: 'Ïò§Îäò 1Í∞ú',
      color: 'bg-purple-50 text-purple-600',
      href: '/life'
    }
  ]

  const notices = [
    {
      id: 1,
      title: 'Ï†ïÍ∏∞ ÏÜåÎèÖ Ïã§Ïãú ÏïàÎÇ¥',
      content: '10Ïõî 20Ïùº(Ïùº) Ïò§ÌõÑ 2ÏãúÎ∂ÄÌÑ∞ ÏïÑÌååÌä∏ Ï†ÑÏ≤¥ Î∞©Ïó≠ ÏÜåÎèÖÏùÑ Ïã§ÏãúÌï©ÎãàÎã§. Ìï¥Îãπ ÏãúÍ∞ÑÏóêÎäî Ïô∏Ï∂úÏùÑ ÏûêÏ†úÌï¥ Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.',
      type: 'Í∏¥Í∏â',
      time: '2ÏãúÍ∞Ñ Ï†Ñ',
      isImportant: true,
      category: 'urgent'
    },
    {
      id: 2,
      title: 'Ï£ºÏ∞®Ïû• Î≥¥ÏàòÍ≥µÏÇ¨ ÏôÑÎ£å',
      content: 'ÏßÄÌïò 1Ï∏µ Ï£ºÏ∞®Ïû• Î≥¥ÏàòÍ≥µÏÇ¨Í∞Ä ÏôÑÎ£åÎêòÏñ¥ Ï†ïÏÉÅ Ïù¥Ïö© Í∞ÄÎä•Ìï©ÎãàÎã§.',
      type: 'ÏôÑÎ£å',
      time: '5ÏãúÍ∞Ñ Ï†Ñ',
      isImportant: false,
      category: 'completed'
    },
    {
      id: 3,
      title: 'Í¥ÄÎ¶¨ÎπÑ Í≥†ÏßÄÏÑú Î∞úÏÜ°',
      content: '10Ïõî Í¥ÄÎ¶¨ÎπÑ Í≥†ÏßÄÏÑúÍ∞Ä Î∞úÏÜ°ÎêòÏóàÏäµÎãàÎã§. ÌôïÏù∏ Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§.',
      type: 'ÏïàÎÇ¥',
      time: '1Ïùº Ï†Ñ',
      isImportant: false,
      category: 'info'
    }
  ]

  const recentPosts = [
    {
      title: 'ÏóòÎ¶¨Î≤†Ïù¥ÌÑ∞ Í≥†Ïû• Ïã†Í≥†',
      author: '101Îèô Ï£ºÎØº',
      comments: 5,
      time: '30Î∂Ñ Ï†Ñ',
      isHot: true
    },
    {
      title: 'Î∞òÎ†§ÎèôÎ¨º ÏÇ∞Ï±Ö ÏãúÍ∞Ñ Î¨∏Ïùò',
      author: '205Îèô Ï£ºÎØº',
      comments: 8,
      time: '1ÏãúÍ∞Ñ Ï†Ñ',
      isHot: false
    },
    {
      title: 'ÌÉùÎ∞∞Ìï® Ïù¥Ïö© Í¥ÄÎ†® Í±¥Ïùò',
      author: '304Îèô Ï£ºÎØº',
      comments: 3,
      time: '2ÏãúÍ∞Ñ Ï†Ñ',
      isHot: false
    }
  ]

  const getBadgeStyle = (category: string) => {
    switch (category) {
      case 'urgent':
        return 'bg-red-50 text-red-600 border-red-200'
      case 'completed':
        return 'bg-green-50 text-green-600 border-green-200'
      case 'info':
        return 'bg-blue-50 text-blue-600 border-blue-200'
      default:
        return 'bg-gray-50 text-gray-600 border-gray-200'
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="p-4 space-y-6 max-w-md mx-auto lg:max-w-4xl lg:px-8">
        {/* Ìó§Îçî */}
        <header className="flex items-center justify-between pt-2 lg:pt-6">
          <div>
            <h1 className="text-2xl font-bold text-gray-900 lg:text-3xl">ÏïàÎÖïÌïòÏÑ∏Ïöî! üëã</h1>
            <p className="text-sm text-gray-600 mt-1 lg:text-base">101Îèô 1001Ìò∏ ÌôçÍ∏∏ÎèôÎãò</p>
          </div>
          <button 
            className="relative p-2 hover:bg-gray-100 rounded-lg transition-colors lg:p-3"
            aria-label="ÏïåÎ¶º ÌôïÏù∏"
          >
            <Bell className="h-6 w-6 text-gray-600 lg:h-7 lg:w-7" />
            <div 
              className="notification-badge"
              aria-label="ÏùΩÏßÄ ÏïäÏùÄ ÏïåÎ¶º ÏûàÏùå"
            ></div>
          </button>
        </header>

        {/* Î©îÏù∏ ÏΩòÌÖêÏ∏† ÏòÅÏó≠ */}
        <div className="lg:grid lg:grid-cols-3 lg:gap-8 lg:space-y-0 space-y-6">

        {/* Îπ†Î•∏ Ïï°ÏÖò */}
        <section className="lg:col-span-2">
          <h2 className="text-lg font-semibold text-gray-900 mb-4 lg:text-xl">Îπ†Î•∏ Î©îÎâ¥</h2>
          <div className="grid grid-cols-2 gap-3 lg:grid-cols-4 lg:gap-4">
            {quickActions.map((action, index) => {
              const Icon = action.icon
              return (
                <Card 
                  key={index} 
                  className="p-4 hover:shadow-md transition-all duration-200 cursor-pointer border-0 shadow-sm focus-within:ring-2 focus-within:ring-primary-500"
                  role="button"
                  tabIndex={0}
                  aria-label={`${action.title} - ${action.description}`}
                  onKeyDown={(e) => {
                    if (e.key === 'Enter' || e.key === ' ') {
                      e.preventDefault()
                      // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Î°úÏßÅ Ï∂îÍ∞Ä ÌïÑÏöî
                    }
                  }}
                >
                  <div className="flex items-center space-x-3">
                    <div className={`relative p-3 rounded-xl ${action.color}`}>
                      <Icon className="h-5 w-5" />
                      {action.badge && (
                        <div 
                          className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center font-medium"
                          aria-label={`${action.badge}Í∞úÏùò ÏÉà Ìï≠Î™©`}
                        >
                          {action.badge}
                        </div>
                      )}
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900 text-sm">{action.title}</h3>
                      <p className="text-xs text-gray-600 mt-0.5">{action.description}</p>
                    </div>
                  </div>
                </Card>
              )
            })}
          </div>
        </section>

        {/* Ï§ëÏöî Í≥µÏßÄÏÇ¨Ìï≠ */}
        <section className="lg:col-span-1">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-semibold text-gray-900 lg:text-xl">Í≥µÏßÄÏÇ¨Ìï≠</h2>
            <Button variant="ghost" size="sm" className="text-primary-500 hover:text-primary-600 hover:bg-primary-50 lg:hidden">
              Ï†ÑÏ≤¥Î≥¥Í∏∞ <ChevronRight className="h-4 w-4 ml-1" />
            </Button>
          </div>
          
          <div className="space-y-3">
            {notices.map((notice) => (
              <Card 
                key={notice.id} 
                className={`p-4 border-0 shadow-sm hover:shadow-md transition-all duration-200 ${
                  notice.isImportant ? 'bg-red-50 border-l-4 border-l-red-500' : 'bg-white'
                }`}
                role={notice.isImportant ? 'alert' : undefined}
                aria-live={notice.isImportant ? 'assertive' : 'polite'}
              >
                <div className="flex items-start space-x-3">
                  <div className="flex-shrink-0 mt-1">
                    {notice.isImportant ? (
                      <AlertCircle className="h-5 w-5 text-red-500" aria-label="Í∏¥Í∏â Í≥µÏßÄ" />
                    ) : (
                      <CheckCircle className="h-5 w-5 text-green-500" aria-label="ÏùºÎ∞ò Í≥µÏßÄ" />
                    )}
                  </div>
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center gap-2 mb-2">
                      <Badge 
                        className={`text-xs font-medium border ${getBadgeStyle(notice.category)}`}
                      >
                        {notice.type}
                      </Badge>
                      <div className="flex items-center gap-1 text-xs text-gray-500">
                        <Clock className="h-3 w-3" />
                        <span>{notice.time}</span>
                      </div>
                    </div>
                    <h3 className="font-semibold text-gray-900 mb-2 leading-tight">{notice.title}</h3>
                    <p className="text-sm text-gray-600 line-clamp-2 leading-relaxed">{notice.content}</p>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </section>

        {/* ÏµúÍ∑º Ïª§ÎÆ§ÎãàÌã∞ Í∏Ä */}
        <section className="lg:col-span-2">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-semibold text-gray-900 lg:text-xl">ÏµúÍ∑º Ïª§ÎÆ§ÎãàÌã∞ Í∏Ä</h2>
            <Button variant="ghost" size="sm" className="text-primary-500 hover:text-primary-600 hover:bg-primary-50">
              ÎçîÎ≥¥Í∏∞ <ChevronRight className="h-4 w-4 ml-1" />
            </Button>
          </div>
          
          <Card className="divide-y divide-gray-100 border-0 shadow-sm">
            {recentPosts.map((post, index) => (
              <article 
                key={index} 
                className="p-4 flex items-center justify-between hover:bg-gray-50 transition-colors duration-200 focus-within:bg-gray-50"
              >
                <div className="flex-1 min-w-0">
                  <div className="flex items-center gap-2 mb-1">
                    <h3 className="font-medium text-gray-900 truncate">{post.title}</h3>
                    {post.isHot && (
                      <Badge 
                        className="bg-red-100 text-red-600 text-xs px-2 py-0.5 border-red-200"
                        aria-label="Ïù∏Í∏∞ Í≤åÏãúÍ∏Ä"
                      >
                        HOT
                      </Badge>
                    )}
                  </div>
                  <div className="flex items-center gap-2 text-xs text-gray-500">
                    <span>{post.author}</span>
                    <span>‚Ä¢</span>
                    <div className="flex items-center gap-1">
                      <Clock className="h-3 w-3" />
                      <span>{post.time}</span>
                    </div>
                  </div>
                </div>
                <div className="flex items-center gap-3 ml-3">
                  <div className="flex items-center gap-1 text-xs text-gray-500">
                    <MessageSquare className="h-3 w-3" />
                    <span>{post.comments}</span>
                  </div>
                  <ChevronRight className="h-4 w-4 text-gray-400" aria-hidden="true" />
                </div>
              </article>
            ))}
          </Card>
        </section>
        </div>

        {/* ÌïòÎã® Ïó¨Î∞± (ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Î∞î Í≥µÍ∞Ñ ÌôïÎ≥¥) */}
        <div className="h-4 lg:h-8"></div>
      </div>
    </div>
  )
}
